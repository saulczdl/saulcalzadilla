{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red252\green39\blue18;}
{\*\expandedcolortbl;;\cssrgb\c100000\c25271\c7591;}
\paperw11900\paperh16840\margl1440\margr1440\vieww22280\viewh12620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 COMANDOS SQL\
Converte dados de texte para numero (VARCHAR to FLOAT)\
SELECT * FROM [dbo].[RAW_Transacoes_20191030]\
ORDER BY CAST([Unit Price] AS FLOAT) \
GO\
\
SELECT * FROM [dbo].[RAW_Transacoes_20191030]\
ORDER BY CONVERT (FLOAT , [Unit Price]) \
GO\
\

\b\fs36 Criar campo auto num\'e9rico\

\b0\fs24 CREATE TABLE [RAW_Tabela] (\
[IdCampo] int identity(1,1),\
[Proximos_Campos] varchar(1000)\
)\
\

\b\fs36 Filtra erros 
\b0\fs24 \
SELECT *\
  FROM [DS_DATASCIENCE].[dbo].[RAW_ClientesAfrica_20191101]\
  WHERE [Column 46] 
\b \cf2 NOT LIKE ' '\cf0  
\b0 OR [Latitude] 
\b \cf2 NOT LIKE '%.%'
\b0 \cf0 \
\
\

\b Apaga todo conte\'fado\

\b0 DELETE  FROM [DS_DATASCIENCE].[dbo].[RAW_ClientesAfrica_20191101]\
\

\b Apagar conte\'fado indesejado\

\b0 DELETE FROM [DS_DATASCIENCE].[dbo].[RAW_ClientesAfrica_20191101]\
WHERE  [Column 46] NOT LIKE ' ' OR [Longitude] NOT LIKE '%.%'\
\
\

\b\fs36 Limpar Tabela\

\b0\fs24 TRUNCATE TABLE [DS_DATASCIENCE].[dbo].[RAW_ClientesAfrica_20191101]\
\

\b\fs36 Fun\'e7\'e3o Split (LEN) Dentro da Ferramenta Conditional Split
\b0 \

\fs24 LEN([Column 46]) > 0 || LEN(Longitude) == 0\
\
\

\b\fs36 Organizar por ordem crescente de uma determinada coluna
\b0 \

\fs24 SELECT * FROM [DS_DATASCIENCE].[dbo].[RAW_Transacoes_20191105]\
ORDER By [Unit Price]\
GO\
\

\b\fs28 Organizar e converter formato de registros com o CAST
\b0\fs24 \
SELECT * FROM [DS_DATASCIENCE].[dbo].[RAW_Transacoes_20191105]\
ORDER BY CAST([Unit Price] AS FLOAT)\
GO\
\

\b\fs28 Organizar e converter formato de registros com o CONVERT
\b0\fs24 \
SELECT * FROM [DS_DATASCIENCE].[dbo].[RAW_Transacoes_20191105]\
ORDER BY CONVERTT(FLOAT , [Unit Price] )\
GO\
\
\

\b Conectar ao Banco de dados\

\b0 USE DS_DATASCIENCE\
GO\
\

\b Cria Procedure
\b0 \
CREATE PROCEDURE SP_Work_CLIENTES \
\

\b Criar Tabela\

\b0 CREATE TABLE WRK_CLIENTES(\
       [RowNumber]		INT IDENTITY\
      ,[Customer ID]		VARCHAR(100)\
      ,[City]				VARCHAR(100)\
      ,[ZipCode]			VARCHAR(10)\
      ,[Gender]			CHAR(1)\
      ,[Age]				FLOAT)\
\

\b Alterar Procedure ou Tabela\

\b0 ALTER PROCEDURE\
 ALTER TABLE\
\
\

\b Conta n\'fameros de linhas da tabela.
\b0 \
SELECT COUNT(*) FROM Tabela\
\

\b Fun\'e7\'e3o RICHT\

\b0 SELECT RIGHT(\'910000000\'92 + \'919999\'92,7)\
S\'f3 funciona com os zeros em String e os n\'fameros \'e0 direita como VARCHAR (N\'e3o funciona com 
\b NUMERIC
\b0 ), ele soma os 3 noves a direita com os 7 zeros, sobrep\'f5e os 3 zeros a direita e completa com 4 zeros para completar os 7 caracteres.\
\
\

\b Sincronizar uma tabela em outra com Join\

\b0 SELECT        \
		WRK_CLIENTES.City, \
		WRK_CLIENTES.ZipCode, \
		WRK_CLIENTES.Gender, \
		WRK_CLIENTES.Age, \
		WRK_TRANSACOES.[Order ID], \
		WRK_CLIENTES.[Customer ID], \
		WRK_TRANSACOES.[Order Date], \
                 WRK_TRANSACOES.Region, \
		WRK_TRANSACOES.Rep, \
		WRK_TRANSACOES.Item, \
		WRK_TRANSACOES.Units, \
		WRK_TRANSACOES.[Unit Price]\
FROM\
WRK_CLIENTES INNER JOIN\
        WRK_TRANSACOES \
ON WRK_CLIENTES.[Customer ID] = \
	WRK_TRANSACOES.[Customer ID]\
\

\b Criar Visualiza\'e7\'e3o
\b0 \
CREATE VIEW V_DRV_CLIENTESTRANSACOES\
AS\
SELECT        \
		WRK_CLIENTES.[Customer ID],\
\

\b\fs28 Exibir uma Join criada (VIEW) Eleva o processamento:\

\b0\fs24 SELECT * FROM V_DRV_CLIENTESTRANSACOES (Selecionar uma view)\
a melhor alternativa \'e9 criar uma tabela de join (derivada) , para n\'e3o comprometer o desempenho do servidor\
\
\
\
}